name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    # Run a local ceramic nod to test against
    # services:
    #   ceramic:
    #     image: ceramicnetwork/js-ceramic:2.6.0-rc.1
    #     ports:
    #       - 7007:7007

    # env:
    #  CERAMIC_CLIENT_URL: http://127.0.0.1:7007

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pipenv
        run: pip3 install pipenv

      - name: Generate requirements.txt
        working-directory: ./api
        run: pipenv requirements --dev > requirements.txt

      - name: Install API dependencies
        working-directory: ./api
        run: pip3 install -r requirements.txt

      - name: Django Check
        working-directory: ./api
        run: python manage.py check

      - name: Run API unittests
        working-directory: ./api
        run: pytest
      # - name: Run API unittests
      #   working-directory: ./api
      #   run: coverage run --source='.' manage.py test

      # - name: Python code coverage report
      #   working-directory: ./api
      #   run: coverage report --fail-under=70

  # cypress-install:
  #   runs-on: ubuntu-latest
  #   container: cypress/browsers:node18.12.0-chrome107
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Cypress install
  #       uses: cypress-io/github-action@v4.2.2 # use the explicit version number
  #       with:
  #         # Disable running of tests within install job
  #         runTests: false
  #         install-command: yarn --frozen-lockfile
  #         build: yarn build
  #         working-directory: test

  #     - name: Save build folder
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: build
  #         if-no-files-found: error
  #         path: test/build

  # cypress-tests:
  #   runs-on: ubuntu-latest
  #   container: cypress/browsers:node18.12.0-chrome107
  #   needs: cypress-install
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       # run copies of the current job in parallel
  #       containers: [1, 2]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Download the build folders
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #         path: test/build

  #     - name: 'UI Tests - Chrome'
  #       uses: cypress-io/github-action@v4.2.2 # use the explicit version number
  #       with:
  #         # we have already installed all dependencies above
  #         install: false
  #         start: yarn start:ci
  #         start: |
  #           npm run api
  #           npm run web
  #         wait-on: 'http://localhost:3000, http://localhost:8000'
  #         wait-on-timeout: 120
  #         browser: chrome
  #         record: true
  #         parallel: true
  #         group: 'UI - Chrome'
  #         spec: cypress/tests/ui/*
  #         working-directory: test
  #       env:
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # Recommended: pass the GitHub token lets this action correctly
  #         # determine the unique run id necessary to re-run the checks
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
